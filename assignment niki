{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"assignment niki","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"uMreULcke6vw","colab_type":"code","outputId":"8431d9ff-2330-4121-a51c-515b1a88a6cc","executionInfo":{"status":"ok","timestamp":1565445769811,"user_tz":-330,"elapsed":3773,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["import pandas as pd\n","import numpy as np\n","from googletrans import Translator\n","import emoji\n","import contractions\n","import string\n","import re\n","import time\n","import os\n","import time\n","import numpy as np\n","import pandas as pd\n","from tqdm import tqdm\n","import contractions\n","import nltk\n","import re\n","import pickle\n","import string\n","from sklearn.model_selection import train_test_split\n","from keras.preprocessing.text import Tokenizer\n","from keras.preprocessing.sequence import pad_sequences\n","from keras import backend as K\n","from keras.engine.topology import Layer\n","from keras.models import Sequential\n","from keras.layers import Dense, LSTM, Conv1D, Flatten, MaxPool1D, Activation, Dropout, Input, Lambda, TimeDistributed, Bidirectional\n","from keras.layers.embeddings import Embedding\n","from keras.models import Model\n","from matplotlib import pyplot as plt\n","import tensorflow as tf\n","import tensorflow_hub as hub\n","from sklearn import preprocessing\n","from keras.utils import to_categorical\n","from sklearn.utils.class_weight import compute_class_weight\n"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"XkU57GEogCb2","colab_type":"code","outputId":"6f99ec43-ec44-4cdf-fe07-07c2c0107496","executionInfo":{"status":"ok","timestamp":1565445727388,"user_tz":-330,"elapsed":9783,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}},"colab":{"base_uri":"https://localhost:8080/","height":205}},"source":["!pip install emoji"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Collecting emoji\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/1b/d7/2746b4dd67375ce253e777ba54869545d24d2b0249ebcf83735c99df68d5/emoji-0.5.3.tar.gz (43kB)\n","\r\u001b[K     |███████▌                        | 10kB 19.4MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 20kB 6.4MB/s eta 0:00:01\r\u001b[K     |██████████████████████▋         | 30kB 9.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▏ | 40kB 6.1MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 51kB 6.4MB/s \n","\u001b[?25hBuilding wheels for collected packages: emoji\n","  Building wheel for emoji (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for emoji: filename=emoji-0.5.3-cp36-none-any.whl size=42175 sha256=006ee1b24971732cfc641c38c70cd34b719429e31e51887780298093bcdad58e\n","  Stored in directory: /root/.cache/pip/wheels/86/09/26/f944015841423cd516e8a97f30e29be59e53461aea8b7d3458\n","Successfully built emoji\n","Installing collected packages: emoji\n","Successfully installed emoji-0.5.3\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Dm3Eg4yegHS9","colab_type":"code","outputId":"74b294c8-49a8-4719-d245-e52bef9da912","executionInfo":{"status":"ok","timestamp":1565445735365,"user_tz":-330,"elapsed":6133,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}},"colab":{"base_uri":"https://localhost:8080/","height":104}},"source":["!pip install contractions"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Collecting contractions\n","  Downloading https://files.pythonhosted.org/packages/f5/2a/ba0a3812e2a1de2cc4ee0ded0bdb750a7cef1631c13c78a4fc4ab042adec/contractions-0.0.21-py2.py3-none-any.whl\n","Installing collected packages: contractions\n","Successfully installed contractions-0.0.21\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"xqm-dt8WgM7B","colab_type":"code","outputId":"ff34d6b8-a9ce-4821-f775-427f119405a7","executionInfo":{"status":"ok","timestamp":1565445747435,"user_tz":-330,"elapsed":8686,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}},"colab":{"base_uri":"https://localhost:8080/","height":289}},"source":["!pip install textsearch"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Collecting textsearch\n","  Downloading https://files.pythonhosted.org/packages/42/a8/03407021f9555043de5492a2bd7a35c56cc03c2510092b5ec018cae1bbf1/textsearch-0.0.17-py2.py3-none-any.whl\n","Collecting pyahocorasick (from textsearch)\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f4/9f/f0d8e8850e12829eea2e778f1c90e3c53a9a799b7f412082a5d21cd19ae1/pyahocorasick-1.4.0.tar.gz (312kB)\n","\u001b[K     |████████████████████████████████| 317kB 12.5MB/s \n","\u001b[?25hCollecting Unidecode (from textsearch)\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/d0/42/d9edfed04228bacea2d824904cae367ee9efd05e6cce7ceaaedd0b0ad964/Unidecode-1.1.1-py2.py3-none-any.whl (238kB)\n","\u001b[K     |████████████████████████████████| 245kB 51.3MB/s \n","\u001b[?25hBuilding wheels for collected packages: pyahocorasick\n","  Building wheel for pyahocorasick (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyahocorasick: filename=pyahocorasick-1.4.0-cp36-cp36m-linux_x86_64.whl size=81710 sha256=beb585c990f79f8f87fef4e8de78ec7819e11a01c0c6c7821ed3382275b656cf\n","  Stored in directory: /root/.cache/pip/wheels/0a/90/61/87a55f5b459792fbb2b7ba6b31721b06ff5cf6bde541b40994\n","Successfully built pyahocorasick\n","Installing collected packages: pyahocorasick, Unidecode, textsearch\n","Successfully installed Unidecode-1.1.1 pyahocorasick-1.4.0 textsearch-0.0.17\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"h2tyA1OopVlF","colab_type":"code","outputId":"1694935c-a4e5-48b0-80b6-ddaffd473a8d","executionInfo":{"status":"ok","timestamp":1565445757431,"user_tz":-330,"elapsed":8391,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}},"colab":{"base_uri":"https://localhost:8080/","height":289}},"source":["!pip install git+https://github.com/BoseCorp/py-googletrans.git --upgrade"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Collecting git+https://github.com/BoseCorp/py-googletrans.git\n","  Cloning https://github.com/BoseCorp/py-googletrans.git to /tmp/pip-req-build-bm1tz94g\n","  Running command git clone -q https://github.com/BoseCorp/py-googletrans.git /tmp/pip-req-build-bm1tz94g\n","Requirement already satisfied, skipping upgrade: requests in /usr/local/lib/python3.6/dist-packages (from googletrans==2.3.0) (2.21.0)\n","Requirement already satisfied, skipping upgrade: chardet<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests->googletrans==2.3.0) (3.0.4)\n","Requirement already satisfied, skipping upgrade: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests->googletrans==2.3.0) (1.24.3)\n","Requirement already satisfied, skipping upgrade: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests->googletrans==2.3.0) (2019.6.16)\n","Requirement already satisfied, skipping upgrade: idna<2.9,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests->googletrans==2.3.0) (2.8)\n","Building wheels for collected packages: googletrans\n","  Building wheel for googletrans (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for googletrans: filename=googletrans-2.3.0-cp36-none-any.whl size=16450 sha256=b7f75f398215d4baec24a8d94312727493c3f556313b8ec02682c5fd44653cb7\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-dj2gb3nm/wheels/6a/fc/9e/2d31d95d9e97da5166afd8225a6f3b6850dc2c6e84accefbfc\n","Successfully built googletrans\n","Installing collected packages: googletrans\n","Successfully installed googletrans-2.3.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"KbsQU7BUz7bq","colab_type":"code","outputId":"b4b80032-7098-4a82-fb2b-8a41909127e4","executionInfo":{"status":"ok","timestamp":1565445832390,"user_tz":-330,"elapsed":39744,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}},"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":142}},"source":["from google.colab import files\n","\n","uploaded = files.upload()\n","\n","for fn in uploaded.keys():\n","  print('User uploaded file \"{name}\" with length {length} bytes'.format(\n","      name=fn, length=len(uploaded[fn])))"],"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-2864a2d2-f102-455e-8058-d60816a41f42\" name=\"files[]\" multiple disabled />\n","     <output id=\"result-2864a2d2-f102-455e-8058-d60816a41f42\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving test (3) (1) (3) (2).csv to test (3) (1) (3) (2).csv\n","Saving train (3) (1) (3) (2).csv to train (3) (1) (3) (2).csv\n","User uploaded file \"test (3) (1) (3) (2).csv\" with length 176794 bytes\n","User uploaded file \"train (3) (1) (3) (2).csv\" with length 686263 bytes\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vxh0riDPbAsy","colab_type":"code","colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":108},"outputId":"863db697-0941-4072-b728-bcae50ce0d1c","executionInfo":{"status":"ok","timestamp":1565445940830,"user_tz":-330,"elapsed":48645,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}}},"source":["uploaded = files.upload()\n"],"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-4cb81c27-2f6d-4187-bd70-93892f133b34\" name=\"files[]\" multiple disabled />\n","     <output id=\"result-4cb81c27-2f6d-4187-bd70-93892f133b34\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving review.pkl to review.pkl\n","Saving test_review.pkl to test_review.pkl\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_yAXUdgXtVFs","colab_type":"code","colab":{}},"source":["train_df = pd.read_csv('train (3) (1) (3) (2).csv')\n","test_df = pd.read_csv('test (3) (1) (3) (2).csv')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"FidcVTDptm6g","colab_type":"code","outputId":"740cd5ff-f3dd-410a-ce49-4e4882c88a91","executionInfo":{"status":"ok","timestamp":1565445963628,"user_tz":-330,"elapsed":1440,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}},"colab":{"base_uri":"https://localhost:8080/","height":296}},"source":["train_df.head()"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>App Version Code</th>\n","      <th>App Version Name</th>\n","      <th>Review Text</th>\n","      <th>Review Title</th>\n","      <th>Star Rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>b817b0f0-a2f8-4c9d-a5f6-d3fbf8b1d7e9</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Very bad wallet balance not use.</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>c7844e8f-56c1-487b-ae3e-df2fdf4c1767</td>\n","      <td>43.0</td>\n","      <td>2.30</td>\n","      <td>Froud app i recharge 199 but not done also sen...</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>93ff57f7-9e02-4fa9-b779-3db82b8af0a4</td>\n","      <td>52.0</td>\n","      <td>2.12</td>\n","      <td>Waste to write comments also</td>\n","      <td>Waste no use</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>df2dcdef-c09a-4f35-afab-e1231d3fec9a</td>\n","      <td>62.0</td>\n","      <td>2.21</td>\n","      <td>Nice apo</td>\n","      <td>NaN</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11f8f968-4cec-4424-8427-9709ab05b5be</td>\n","      <td>69.0</td>\n","      <td>2.28</td>\n","      <td>Good nice app</td>\n","      <td>NaN</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                     id  ...  Star Rating\n","0  b817b0f0-a2f8-4c9d-a5f6-d3fbf8b1d7e9  ...            1\n","1  c7844e8f-56c1-487b-ae3e-df2fdf4c1767  ...            1\n","2  93ff57f7-9e02-4fa9-b779-3db82b8af0a4  ...            2\n","3  df2dcdef-c09a-4f35-afab-e1231d3fec9a  ...            5\n","4  11f8f968-4cec-4424-8427-9709ab05b5be  ...            5\n","\n","[5 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"FlY1Iw33t3Gd","colab_type":"code","outputId":"9b4a0ffa-d1ca-4863-d7eb-8f9d672c99b0","executionInfo":{"status":"ok","timestamp":1565445966044,"user_tz":-330,"elapsed":1318,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}},"colab":{"base_uri":"https://localhost:8080/","height":84}},"source":["print(len(train_df)), print(train_df['Review Title'].isnull().sum()), print(len(train_df['Review Title']))"],"execution_count":12,"outputs":[{"output_type":"stream","text":["5693\n","5091\n","5693\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["(None, None, None)"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"jInyQiDB1yT9","colab_type":"code","outputId":"f397d88c-a48d-4ab8-f3a5-8c01a6fded05","executionInfo":{"status":"ok","timestamp":1565445968083,"user_tz":-330,"elapsed":1152,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}},"colab":{"base_uri":"https://localhost:8080/","height":118}},"source":["print(train_df['Star Rating'].value_counts())"],"execution_count":13,"outputs":[{"output_type":"stream","text":["5    2923\n","1    1788\n","4     611\n","3     217\n","2     154\n","Name: Star Rating, dtype: int64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"T8d2EeIs7QR8","colab_type":"code","colab":{}},"source":["def remove_url(text):\n","  return re.sub(r'^https?:\\/\\/.*[\\r\\n]*', '', text)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Qs3yvDvii5cd","colab_type":"code","colab":{}},"source":["def remove_punctuation(text):\n","  words = text.split()\n","  table = str.maketrans('', '', string.punctuation)\n","  stripped = [w.translate(table) for w in words]\n","  sentence = ' '.join(stripped)\n","  return sentence\n","  "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"1GTGm9dt9qpt","colab_type":"code","colab":{}},"source":["def remove_emoji(text):\n","  text = emoji.demojize(text)\n","  text = text.replace('_', ' ')\n","  text = text.replace('::', ' ')\n","  return text"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"HhcGP4XI_NMV","colab_type":"code","colab":{}},"source":["def pre_processing(df):\n","  Review_Text = []\n","  for sentence in df[\"Review Text\"]:\n","    sentence = remove_url(str(sentence))\n","    sentence = ''.join([i for i in sentence if not i.isdigit()])\n","    sentence = contractions.fix(sentence)\n","    sentence = remove_emoji(sentence)\n","#   print(sentence)\n","    translate_urls = [\"translate.google.com\", \"translate.google.co.kr\",\n","                      \"translate.google.at\", \"translate.google.de\",\n","                      \"translate.google.ru\", \"translate.google.ch\",\n","                      \"translate.google.fr\", \"translate.google.es\"]\n","    translator= Translator(service_urls=translate_urls)\n","    sentence = translator.translate(sentence).text\n","    sentence = remove_punctuation(sentence)\n","    Review_Text.append(sentence)\n","  return Review_Text\n","#   Review_Text[i] = translator.translate(Review_Text[i]).text"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"J-ttJk9B8TML","colab_type":"code","colab":{}},"source":["Review_Text= pre_processing(train_df)\n","Review_Text_test= pre_processing(test_df)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"XUpIQXvu7WLr","colab_type":"code","colab":{}},"source":["import pickle as pkl\n","# pkl.dump(Review_Text,open(\"review.pkl\", 'wb'))\n","# pkl.dump(Review_Text_test,open(\"test_review.pkl\", 'wb'))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"mstylVup2hcM","colab_type":"code","colab":{}},"source":["Review_Text = pkl.load(open('review.pkl','rb'))\n","Review_Text_test = pkl.load(open('test_review.pkl', 'rb'))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"SFR_0TWVyRNV","colab_type":"code","colab":{}},"source":["Star_Rating = train_df['Star Rating']\n","y_cat = to_categorical(Star_Rating)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"yzc7qt0H3O7A","colab_type":"code","colab":{}},"source":["train_X,val_X,train_y,val_y = train_test_split(Review_Text, y_cat, test_size = 0.1)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"mvsZ2AJF37wi","colab_type":"code","outputId":"d8b16a22-b795-4ff8-c44d-0568549f6716","executionInfo":{"status":"ok","timestamp":1565446305145,"user_tz":-330,"elapsed":1254,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}},"colab":{"base_uri":"https://localhost:8080/","height":101}},"source":["print(len(train_X)), print(len(val_X)), print(len(train_y)),print(len(val_y))"],"execution_count":25,"outputs":[{"output_type":"stream","text":["5123\n","570\n","5123\n","570\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["(None, None, None, None)"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"Z3XSTBS__Uee","colab_type":"code","outputId":"3da6fc21-6c5f-45c1-d7a8-4f80edfc0554","executionInfo":{"status":"ok","timestamp":1565446308581,"user_tz":-330,"elapsed":1698,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}},"colab":{"base_uri":"https://localhost:8080/","height":269}},"source":["length = []\n","\n","for t in train_X:\n","  length.append(len(t))\n","\n","plt.hist(length, bins = 30)\n","plt.xticks(range(0, 400, 100))\n","plt.show()\n","  "],"execution_count":26,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAYAAAAD8CAYAAAB+UHOxAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAEdxJREFUeJzt3V2sndV95/HvLzYkURMVU85YHtuM\nmcZV5YwUBx0ZV+1FCgoYcmEqpRFILRZCcmcEUiJFozq5GBoylojUhhZNiuQKT0yVCbXyMliNW+o6\nSGkueDGpQzAUcUpA2DLYjYEkZYaRyX8u9nKz45zD2fuc43OI1/cjPdrP83/WWns9XJyfn7dNqgpJ\nUn/esdQTkCQtDQNAkjplAEhSpwwASeqUASBJnTIAJKlTswZAkncleTTJd5McSfKZVv9iku8nOdyW\nja2eJHcnmUryRJLLh8baluTZtmw7d4clSZrN8hHavAFcWVU/TnIB8O0kf9P2/deq+spZ7a8F1rfl\nCuAe4IokFwO3A5NAAY8n2VdVryzEgUiSxjPrGUAN/LhtXtCWt3p7bCtwX+v3MHBRklXANcCBqjrV\n/ugfALbMb/qSpLka5QyAJMuAx4H3AV+oqkeS/BdgZ5L/BhwEdlTVG8Bq4MWh7kdbbab6jC655JJa\nt27diIciSQJ4/PHH/6WqJmZrN1IAVNWbwMYkFwFfT/KfgE8BLwEXAruAPwTumPuUB5JsB7YDXHrp\npRw6dGi+Q0pSV5K8MEq7sZ4CqqpXgYeALVV1vF3meQP4n8Cm1uwYsHao25pWm6l+9nfsqqrJqpqc\nmJg1wCRJczTKU0AT7V/+JHk38GHgn9p1fZIEuB54snXZB9zUngbaDLxWVceBB4Grk6xIsgK4utUk\nSUtglEtAq4A97T7AO4C9VfXXSb6ZZAIIcBj4z639fuA6YAp4HbgZoKpOJfks8Fhrd0dVnVq4Q5Ek\njSNv55+DnpycLO8BSNJ4kjxeVZOztfNNYEnqlAEgSZ0yACSpUwaAJHXKAJCkTo30JvAvqnU7vjFS\nu+fv/Mg5nokkvf14BiBJnTIAJKlTBoAkdcoAkKROGQCS1CkDQJI6ZQBIUqcMAEnqlAEgSZ0yACSp\nUwaAJHXKAJCkThkAktQpA0CSOmUASFKnDABJ6tSsAZDkXUkeTfLdJEeSfKbVL0vySJKpJH+V5MJW\nf2fbnmr71w2N9alWfybJNefqoCRJsxvlDOAN4Mqq+gCwEdiSZDPwOeCuqnof8ApwS2t/C/BKq9/V\n2pFkA3AD8H5gC/DnSZYt5MFIkkY3awDUwI/b5gVtKeBK4Cutvge4vq1vbdu0/VclSavfX1VvVNX3\ngSlg04IchSRpbCPdA0iyLMlh4ARwAPhn4NWqOt2aHAVWt/XVwIsAbf9rwK8M16fpI0laZCMFQFW9\nWVUbgTUM/tX+6+dqQkm2JzmU5NDJkyfP1ddIUvfGegqoql4FHgJ+A7goyfK2aw1wrK0fA9YCtP2/\nDPxguD5Nn+Hv2FVVk1U1OTExMc70JEljGOUpoIkkF7X1dwMfBp5mEAQfbc22AQ+09X1tm7b/m1VV\nrX5De0roMmA98OhCHYgkaTzLZ2/CKmBPe2LnHcDeqvrrJE8B9yf578A/Ave29vcCf5lkCjjF4Mkf\nqupIkr3AU8Bp4NaqenNhD0eSNKpZA6CqngA+OE39OaZ5iqeq/i/wuzOMtRPYOf40JUkLzTeBJalT\nBoAkdcoAkKROGQCS1CkDQJI6ZQBIUqcMAEnqlAEgSZ0yACSpUwaAJHXKAJCkThkAktQpA0CSOmUA\nSFKnDABJ6pQBIEmdMgAkqVMGgCR1ygCQpE4ZAJLUKQNAkjplAEhSp2YNgCRrkzyU5KkkR5J8vNX/\nKMmxJIfbct1Qn08lmUryTJJrhupbWm0qyY5zc0iSpFEsH6HNaeCTVfWdJO8FHk9yoO27q6r+eLhx\nkg3ADcD7gX8P/H2SX2u7vwB8GDgKPJZkX1U9tRAHIkkaz6wBUFXHgeNt/UdJngZWv0WXrcD9VfUG\n8P0kU8Cmtm+qqp4DSHJ/a2sASNISGOseQJJ1wAeBR1rptiRPJNmdZEWrrQZeHOp2tNVmqkuSlsDI\nAZDkPcBXgU9U1Q+Be4BfBTYyOEP4k4WYUJLtSQ4lOXTy5MmFGFKSNI2RAiDJBQz++H+pqr4GUFUv\nV9WbVfUT4C/46WWeY8Daoe5rWm2m+s+oql1VNVlVkxMTE+MejyRpRKM8BRTgXuDpqvr8UH3VULPf\nAZ5s6/uAG5K8M8llwHrgUeAxYH2Sy5JcyOBG8b6FOQxJ0rhGeQroN4HfB76X5HCrfRq4MclGoIDn\ngT8AqKojSfYyuLl7Gri1qt4ESHIb8CCwDNhdVUcW8FgkSWMY5SmgbwOZZtf+t+izE9g5TX3/W/WT\nJC0e3wSWpE4ZAJLUKQNAkjplAEhSpwwASeqUASBJnTIAJKlTBoAkdcoAkKROGQCS1CkDQJI6ZQBI\nUqcMAEnqlAEgSZ0yACSpUwaAJHXKAJCkThkAktQpA0CSOmUASFKnDABJ6pQBIEmdmjUAkqxN8lCS\np5IcSfLxVr84yYEkz7bPFa2eJHcnmUryRJLLh8ba1to/m2TbuTssSdJsRjkDOA18sqo2AJuBW5Ns\nAHYAB6tqPXCwbQNcC6xvy3bgHhgEBnA7cAWwCbj9TGhIkhbfrAFQVcer6jtt/UfA08BqYCuwpzXb\nA1zf1rcC99XAw8BFSVYB1wAHqupUVb0CHAC2LOjRSJJGNtY9gCTrgA8CjwArq+p42/USsLKtrwZe\nHOp2tNVmqkuSlsDIAZDkPcBXgU9U1Q+H91VVAbUQE0qyPcmhJIdOnjy5EENKkqYxUgAkuYDBH/8v\nVdXXWvnldmmH9nmi1Y8Ba4e6r2m1meo/o6p2VdVkVU1OTEyMcyySpDGM8hRQgHuBp6vq80O79gFn\nnuTZBjwwVL+pPQ20GXitXSp6ELg6yYp28/fqVpMkLYHlI7T5TeD3ge8lOdxqnwbuBPYmuQV4AfhY\n27cfuA6YAl4HbgaoqlNJPgs81trdUVWnFuQoJEljmzUAqurbQGbYfdU07Qu4dYaxdgO7x5mgJOnc\n8E1gSeqUASBJnTIAJKlTBoAkdcoAkKROGQCS1CkDQJI6ZQBIUqcMAEnqlAEgSZ0yACSpUwaAJHXK\nAJCkThkAktQpA0CSOmUASFKnDABJ6pQBIEmdMgAkqVMGgCR1ygCQpE4ZAJLUqVkDIMnuJCeSPDlU\n+6Mkx5Icbst1Q/s+lWQqyTNJrhmqb2m1qSQ7Fv5QJEnjGOUM4IvAlmnqd1XVxrbsB0iyAbgBeH/r\n8+dJliVZBnwBuBbYANzY2kqSlsjy2RpU1beSrBtxvK3A/VX1BvD9JFPAprZvqqqeA0hyf2v71Ngz\nliQtiPncA7gtyRPtEtGKVlsNvDjU5mirzVSXJC2RuQbAPcCvAhuB48CfLNSEkmxPcijJoZMnTy7U\nsJKks8wpAKrq5ap6s6p+AvwFP73McwxYO9R0TavNVJ9u7F1VNVlVkxMTE3OZniRpBHMKgCSrhjZ/\nBzjzhNA+4IYk70xyGbAeeBR4DFif5LIkFzK4Ubxv7tOWJM3XrDeBk3wZ+BBwSZKjwO3Ah5JsBAp4\nHvgDgKo6kmQvg5u7p4Fbq+rNNs5twIPAMmB3VR1Z8KORJI1slKeAbpymfO9btN8J7Jymvh/YP9bs\nJEnnjG8CS1KnDABJ6pQBIEmdMgAkqVMGgCR1ygCQpE4ZAJLUKQNAkjplAEhSpwwASeqUASBJnTIA\nJKlTBoAkdcoAkKROGQCS1CkDQJI6ZQBIUqcMAEnqlAEgSZ0yACSpUwaAJHXKAJCkTs0aAEl2JzmR\n5Mmh2sVJDiR5tn2uaPUkuTvJVJInklw+1Gdba/9skm3n5nAkSaMa5Qzgi8CWs2o7gINVtR442LYB\nrgXWt2U7cA8MAgO4HbgC2ATcfiY0JElLY9YAqKpvAafOKm8F9rT1PcD1Q/X7auBh4KIkq4BrgANV\ndaqqXgEO8POhIklaRHO9B7Cyqo639ZeAlW19NfDiULujrTZTXZK0ROZ9E7iqCqgFmAsASbYnOZTk\n0MmTJxdqWEnSWeYaAC+3Szu0zxOtfgxYO9RuTavNVP85VbWrqiaranJiYmKO05MkzWauAbAPOPMk\nzzbggaH6Te1poM3Aa+1S0YPA1UlWtJu/V7eaJGmJLJ+tQZIvAx8CLklylMHTPHcCe5PcArwAfKw1\n3w9cB0wBrwM3A1TVqSSfBR5r7e6oqrNvLEuSFtGsAVBVN86w66pp2hZw6wzj7AZ2jzU7SdI545vA\nktQpA0CSOmUASFKnDABJ6tSsN4F7sG7HN0Zq9/ydHznHM5GkxeMZgCR1ygCQpE4ZAJLUKQNAkjpl\nAEhSpwwASeqUASBJnTIAJKlTBoAkdcoAkKROGQCS1CkDQJI6ZQBIUqcMAEnqlAEgSZ0yACSpUwaA\nJHVqXgGQ5Pkk30tyOMmhVrs4yYEkz7bPFa2eJHcnmUryRJLLF+IAJElzsxBnAL9dVRurarJt7wAO\nVtV64GDbBrgWWN+W7cA9C/DdkqQ5OheXgLYCe9r6HuD6ofp9NfAwcFGSVefg+yVJI5hvABTwd0ke\nT7K91VZW1fG2/hKwsq2vBl4c6nu01SRJS2D5PPv/VlUdS/LvgANJ/ml4Z1VVkhpnwBYk2wEuvfTS\neU5PkjSTeZ0BVNWx9nkC+DqwCXj5zKWd9nmiNT8GrB3qvqbVzh5zV1VNVtXkxMTEfKYnSXoLcw6A\nJL+U5L1n1oGrgSeBfcC21mwb8EBb3wfc1J4G2gy8NnSpSJK0yOZzCWgl8PUkZ8b5X1X1t0keA/Ym\nuQV4AfhYa78fuA6YAl4Hbp7Hd0uS5mnOAVBVzwEfmKb+A+CqaeoF3DrX73s7WLfjGyO1e/7Oj5zj\nmUjS/PkmsCR1ygCQpE4ZAJLUKQNAkjplAEhSpwwASeqUASBJnTIAJKlTBoAkdcoAkKROGQCS1Kn5\n/v8ANA1/M0jSLwLPACSpUwaAJHXKAJCkThkAktQpA0CSOmUASFKnDABJ6pTvASwh3xeQtJQ8A5Ck\nTnkG8Atg1DMF8GxB0ugW/QwgyZYkzySZSrJjsb9fkjSwqAGQZBnwBeBaYANwY5INizkHSdLAYl8C\n2gRMVdVzAEnuB7YCTy3yPM5b41wuGoWXlKTz12IHwGrgxaHto8AVizwHjcFAkc5fb7ubwEm2A9vb\n5o+TPDOP4S4B/mUJ+7+dxnhbyOeWegZSF/7DKI0WOwCOAWuHtte02r+pql3AroX4siSHqmpyqfq/\nncaQpLMt9lNAjwHrk1yW5ELgBmDfIs9BksQinwFU1ekktwEPAsuA3VV1ZDHnIEkaWPR7AFW1H9i/\nSF8330tJC3Ep6u0yhiT9jFTVUs9BkrQE/C0gSerUeRkAo/7cRJLdSU4keXKodnGSA0mebZ8rWj1J\n7m5jPpHk8lZfm+ShJE8lOZLk42OOsznJo0m+2/p/prW7LMkjrd1ftZvmJHln255q+9edq/+Oks5v\n510AjPlzE18EtpxV2wEcrKr1wMG2TRtvfVu2A/e0+mngk1W1AdgM3Nq+b9Rx/gy4sqo+AGwEtiTZ\nDHwOuKuq3ge8AtzS+t8CvNLqd7V2kjS28y4AGPq5iar6f8CZn5v4OVX1LeDUWeWtwJ62vge4fqh+\nXw08DFyUZFVVHa+q77TxfgQ8zeCN55HHAd7b9l3QlgKuBL4yQ/8z434FuCpJZv/PIkk/63wMgOl+\nbmL1GP1XVtXxtv4SsHLUcdvlmA8Cj4w5ztokh4ETwAHgn4FXq+r0NN/1b/3b/teAXxnj+CQJOD8D\nYMHU4BGpkR6TSvIe4KvAJ6rqh2OO85Oq2sjgzehNwK/PbcaSNLrzMQBm/bmJWbycZBVA+zwx27hJ\nLmDwx/9LVfW1uY5TVa8CDwG/weAS0/Kz2wz3b/t/GfjBGMcnScD5GQDz/bmJfcC2tr4NeGCoflN7\nimcz8FpVHW/X3+8Fnq6qz89hnH8F/g9AkncDH2ZwH+Eh4KMz9D8z7keBb5Yvc0iag/PyRbAk1wF/\nyk9/bmLnDO2+DHyIwa9tvgzcDvxvYC9wKfAC8LGqOtX+0P8PBk8NvQ7cXFWHkvwW8A/A94CftKE/\nzeA+wCjj7AT+sM31HcDeqrojyX9kcAP7YuAfgd+rqjeSvAv4Swb3Gk4BN5z5/ytI0jjOywCQJM3u\nfLwEJEkagQEgSZ0yACSpUwaAJHXKAJCkThkAktQpA0CSOmUASFKn/j9qXUHq9mlqYwAAAABJRU5E\nrkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"NC9o9_pzA3Kj","colab_type":"code","colab":{}},"source":["# we are taking only upto 150 words from each text sentence.\n","\n","train_text = [' '.join(t.split()[0:150]) for t in train_X]\n","train_text = np.array(train_text, dtype=object)[:, np.newaxis]\n","\n","val_text = [' '.join(t.split()[0:150]) for t in val_X]\n","val_text = np.array(val_text, dtype=object)[:, np.newaxis]\n","\n","test_text = [' '.join(t.split()[0:150]) for t in Review_Text_test]\n","test_text = np.array(test_text, dtype=object)[:, np.newaxis]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ojgp4DiEBWcT","colab_type":"code","colab":{}},"source":["url = \"https://tfhub.dev/google/elmo/2\"\n","embed = hub.Module(url, trainable=True)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"qDwpZW-_Jdjd","colab_type":"code","colab":{}},"source":["def ELMoEmbedding(x):\n","    return embed(tf.squeeze(tf.cast(x, tf.string)), signature=\"default\", as_dict=True)[\"default\"]\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"OM6rjJm_-WEq","colab_type":"code","colab":{}},"source":["def f1(y_true, y_pred):\n","    def recall(y_true, y_pred):\n","        \"\"\"Recall metric.\n","\n","        Only computes a batch-wise average of recall.\n","\n","        Computes the recall, a metric for multi-label classification of\n","        how many relevant items are selected.\n","        \"\"\"\n","        true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1)))\n","        possible_positives = K.sum(K.round(K.clip(y_true, 0, 1)))\n","        recall = true_positives / (possible_positives + K.epsilon())\n","        return recall\n","\n","    def precision(y_true, y_pred):\n","        \"\"\"Precision metric.\n","\n","        Only computes a batch-wise average of precision.\n","\n","        Computes the precision, a metric for multi-label classification of\n","        how many selected items are relevant.\n","        \"\"\"\n","        true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1)))\n","        predicted_positives = K.sum(K.round(K.clip(y_pred, 0, 1)))\n","        precision = true_positives / (predicted_positives + K.epsilon())\n","        return precision\n","    precision = precision(y_true, y_pred)\n","    recall = recall(y_true, y_pred)\n","    return 2*((precision*recall)/(precision+recall+K.epsilon()))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"dOYneyPj_IIm","colab_type":"code","colab":{}},"source":["class_weight_dict = {1: 0.6368008948545861,\n"," 2: 7.393506493506494,\n"," 3: 5.247004608294931,\n"," 4: 1.8635024549918167,\n"," 5: 0.3895313034553541}"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"bZg_9xSbJiko","colab_type":"code","outputId":"ff674982-785d-4296-fdf3-a3ad0d978471","executionInfo":{"status":"ok","timestamp":1565450041599,"user_tz":-330,"elapsed":1328,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}},"colab":{"base_uri":"https://localhost:8080/","height":269}},"source":["input_text = Input(shape=(1,), dtype=tf.string)\n","embedding = Lambda(ELMoEmbedding, output_shape=(1024, ))(input_text)\n","dense = Dense(256, activation='relu', kernel_regularizer='l2')(embedding)\n","pred = Dense(len(y_cat[0]), activation='softmax')(dense)\n","model = Model(inputs=[input_text], outputs=pred)\n","model.compile(loss='categorical_crossentropy', optimizer='adamax', metrics=[f1])\n","model.summary()"],"execution_count":47,"outputs":[{"output_type":"stream","text":["_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_4 (InputLayer)         (None, 1)                 0         \n","_________________________________________________________________\n","lambda_4 (Lambda)            (None, 1024)              0         \n","_________________________________________________________________\n","dense_7 (Dense)              (None, 256)               262400    \n","_________________________________________________________________\n","dense_8 (Dense)              (None, 6)                 1542      \n","=================================================================\n","Total params: 263,942\n","Trainable params: 263,942\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WjL9PJW6Johf","colab_type":"code","outputId":"cc2ca7af-313c-4c36-b869-e484d85afb0f","executionInfo":{"status":"ok","timestamp":1565451477392,"user_tz":-330,"elapsed":940313,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}},"colab":{"base_uri":"https://localhost:8080/","height":894}},"source":["with tf.Session() as session:\n","    K.set_session(session)\n","    session.run(tf.global_variables_initializer())  \n","    session.run(tf.tables_initializer())\n","    history = model.fit(train_text, train_y, validation_data=(val_text, val_y),epochs=20, batch_size=64, class_weight=class_weight_dict)\n","    model.save_weights('./elmo-model.h5')\n"],"execution_count":49,"outputs":[{"output_type":"stream","text":["Train on 5123 samples, validate on 570 samples\n","Epoch 1/20\n"],"name":"stdout"},{"output_type":"stream","text":["Exception ignored in: <bound method BaseSession._Callable.__del__ of <tensorflow.python.client.session.BaseSession._Callable object at 0x7f143de3a128>>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py\", line 1473, in __del__\n","    self._session._session, self._handle)\n","tensorflow.python.framework.errors_impl.CancelledError: (None, None, 'Session has been closed.')\n"],"name":"stderr"},{"output_type":"stream","text":["5120/5123 [============================>.] - ETA: 0s - loss: 5.1973 - f1: 0.1960"],"name":"stdout"},{"output_type":"stream","text":["Exception ignored in: <bound method BaseSession._Callable.__del__ of <tensorflow.python.client.session.BaseSession._Callable object at 0x7f143de3a198>>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py\", line 1473, in __del__\n","    self._session._session, self._handle)\n","tensorflow.python.framework.errors_impl.CancelledError: (None, None, 'Session has been closed.')\n"],"name":"stderr"},{"output_type":"stream","text":["\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r5123/5123 [==============================] - 47s 9ms/step - loss: 5.1961 - f1: 0.1958 - val_loss: 3.4733 - val_f1: 0.2519\n","Epoch 2/20\n","5123/5123 [==============================] - 46s 9ms/step - loss: 3.5554 - f1: 0.2504 - val_loss: 3.0738 - val_f1: 0.2171\n","Epoch 3/20\n","5123/5123 [==============================] - 47s 9ms/step - loss: 3.4034 - f1: 0.3149 - val_loss: 2.9146 - val_f1: 0.1922\n","Epoch 4/20\n","5123/5123 [==============================] - 46s 9ms/step - loss: 3.3176 - f1: 0.3271 - val_loss: 2.6209 - val_f1: 0.5015\n","Epoch 5/20\n","5123/5123 [==============================] - 46s 9ms/step - loss: 2.8359 - f1: 0.3428 - val_loss: 2.3726 - val_f1: 0.5734\n","Epoch 6/20\n","5123/5123 [==============================] - 47s 9ms/step - loss: 2.8866 - f1: 0.3747 - val_loss: 2.6563 - val_f1: 0.3090\n","Epoch 7/20\n","5123/5123 [==============================] - 48s 9ms/step - loss: 2.4884 - f1: 0.3876 - val_loss: 2.4144 - val_f1: 0.2712\n","Epoch 8/20\n","5123/5123 [==============================] - 48s 9ms/step - loss: 2.4997 - f1: 0.3609 - val_loss: 2.1871 - val_f1: 0.4277\n","Epoch 9/20\n","5123/5123 [==============================] - 47s 9ms/step - loss: 2.4979 - f1: 0.4240 - val_loss: 2.0608 - val_f1: 0.4689\n","Epoch 10/20\n","5123/5123 [==============================] - 47s 9ms/step - loss: 2.3226 - f1: 0.4122 - val_loss: 2.2328 - val_f1: 0.3318\n","Epoch 11/20\n","5123/5123 [==============================] - 46s 9ms/step - loss: 2.3908 - f1: 0.4052 - val_loss: 1.9800 - val_f1: 0.4564\n","Epoch 12/20\n","5123/5123 [==============================] - 47s 9ms/step - loss: 2.1928 - f1: 0.4375 - val_loss: 2.3402 - val_f1: 0.2875\n","Epoch 13/20\n","5123/5123 [==============================] - 47s 9ms/step - loss: 2.1964 - f1: 0.4385 - val_loss: 1.9066 - val_f1: 0.4178\n","Epoch 14/20\n","5123/5123 [==============================] - 47s 9ms/step - loss: 2.2975 - f1: 0.4192 - val_loss: 2.3594 - val_f1: 0.3074\n","Epoch 15/20\n","5123/5123 [==============================] - 47s 9ms/step - loss: 2.0773 - f1: 0.4203 - val_loss: 1.7008 - val_f1: 0.6409\n","Epoch 16/20\n","5123/5123 [==============================] - 47s 9ms/step - loss: 2.1018 - f1: 0.4438 - val_loss: 2.7333 - val_f1: 0.1708\n","Epoch 17/20\n","5123/5123 [==============================] - 48s 9ms/step - loss: 2.2652 - f1: 0.4027 - val_loss: 1.6857 - val_f1: 0.4476\n","Epoch 18/20\n","5123/5123 [==============================] - 47s 9ms/step - loss: 2.0032 - f1: 0.4192 - val_loss: 1.6101 - val_f1: 0.6761\n","Epoch 19/20\n","5123/5123 [==============================] - 47s 9ms/step - loss: 1.8936 - f1: 0.4449 - val_loss: 2.5669 - val_f1: 0.2578\n","Epoch 20/20\n","5123/5123 [==============================] - 47s 9ms/step - loss: 1.9697 - f1: 0.4360 - val_loss: 1.4841 - val_f1: 0.5875\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"nHFqTf0YNZ1e","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":138},"outputId":"362c5179-99bc-4f49-fd0d-85c0d3490158","executionInfo":{"status":"ok","timestamp":1565452640944,"user_tz":-330,"elapsed":16262,"user":{"displayName":"SHREY UPADHYAY","photoUrl":"","userId":"17330651561538015169"}}},"source":["with tf.Session() as session:\n","    K.set_session(session)\n","    session.run(tf.global_variables_initializer())\n","    session.run(tf.tables_initializer())\n","    model.load_weights('./elmo-model.h5')  \n","    predicts = model.predict(test_text, batch_size=32, verbose=1)\n","\n"],"execution_count":58,"outputs":[{"output_type":"stream","text":["Exception ignored in: <bound method BaseSession._Callable.__del__ of <tensorflow.python.client.session.BaseSession._Callable object at 0x7f143dd089e8>>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py\", line 1473, in __del__\n","    self._session._session, self._handle)\n","tensorflow.python.framework.errors_impl.CancelledError: (None, None, 'Session has been closed.')\n"],"name":"stderr"},{"output_type":"stream","text":["1424/1424 [==============================] - 14s 10ms/step\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"L702Ov9tUcY3","colab_type":"code","colab":{}},"source":["   "],"execution_count":0,"outputs":[]}]}